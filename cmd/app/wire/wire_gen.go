// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"fiber-wire-template/internal/handler"
	"fiber-wire-template/internal/repository"
	"fiber-wire-template/internal/service"
	"fiber-wire-template/pkg/config"
	"fiber-wire-template/pkg/gredis"
	"fiber-wire-template/pkg/jwt"
	"fiber-wire-template/pkg/log"
	"fiber-wire-template/pkg/ozzodb"
	"fiber-wire-template/pkg/server"
	"fiber-wire-template/pkg/util/sid"
	"fiber-wire-template/route"
	"github.com/google/wire"
)

// Injectors from wire.go:

func NewApp(configConfig *config.Config, logger *log.Logger) (*server.FiberServer, error) {
	handlerHandler := handler.NewHandler(logger)
	sidSid := sid.NewSid()
	jwtJWT := jwt.NewJwt(configConfig)
	serviceService := service.NewService(logger, sidSid, jwtJWT)
	db := ozzodb.NewDb(configConfig, logger)
	redis := gredis.NewRedis(configConfig)
	repositoryRepository := repository.NewRepository(db, redis, logger)
	userRepository := repository.NewUserRepository(repositoryRepository)
	userService := service.NewUserService(serviceService, userRepository)
	userHandler := handler.NewUserHandler(handlerHandler, userService)
	fiberServer := route.SetupRoutes(userHandler)
	return fiberServer, nil
}

// wire.go:

var HandlerSet = wire.NewSet(handler.NewHandler, handler.NewUserHandler)

var ServiceSet = wire.NewSet(service.NewService, service.NewUserService)

var RepositorySet = wire.NewSet(ozzodb.NewDb, gredis.NewRedis, repository.NewRepository, repository.NewUserRepository)
